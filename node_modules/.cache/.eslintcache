[{"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\index.js":"1","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\CreateClass\\CreateClass.js":"2","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Header\\Header.js":"3","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\JoinClass\\JoinClass.js":"4","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Home.js":"5","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\App.js":"6","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Login.js":"7","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\lib\\firebase.js":"8","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\AuthProvider.js":"9","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\SignupForm\\Signup.js":"10","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\classCardUI\\cardUI.js":"11","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\ClassCardUI\\CardUI.js":"12","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\EnteredClass\\EnteredClass.js":"13"},{"size":178,"mtime":1630412919080,"results":"14","hashOfConfig":"15"},{"size":3323,"mtime":1631535300119,"results":"16","hashOfConfig":"15"},{"size":3760,"mtime":1632042140783,"results":"17","hashOfConfig":"15"},{"size":6242,"mtime":1631534935006,"results":"18","hashOfConfig":"15"},{"size":2782,"mtime":1632033769184,"results":"19","hashOfConfig":"15"},{"size":1918,"mtime":1632042113809,"results":"20","hashOfConfig":"15"},{"size":2214,"mtime":1631867376777,"results":"21","hashOfConfig":"15"},{"size":676,"mtime":1630986104253,"results":"22","hashOfConfig":"15"},{"size":869,"mtime":1631171931698,"results":"23","hashOfConfig":"15"},{"size":3111,"mtime":1631177883141,"results":"24","hashOfConfig":"15"},{"size":833,"mtime":1631446724149,"results":"25","hashOfConfig":"15"},{"size":3192,"mtime":1632035077405,"results":"26","hashOfConfig":"15"},{"size":456,"mtime":1632036633935,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ab2eru",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\index.js",[],["60","61"],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\CreateClass\\CreateClass.js",["62"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useContext } from 'react';\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { authContext } from '../AuthProvider';\r\nimport { firestore } from '../lib/firebase';\r\n\r\n\r\nexport default function FormDialog(props) {\r\n\r\n  const [className, setClassName] = useState(\"\")\r\n  const [section, setSection] = useState(\"\")\r\n  const [subject, setSubject] = useState(\"\")\r\n  const [Room, setRoom] = useState(\"\")\r\n\r\n  let user = useContext(authContext);\r\n  let creatorEmail = user?user.email:\"\";\r\n  let creatorPhotoURL = user?user.photoURL:\"\";\r\n\r\n\r\n\r\n\r\n\r\n  const addClass = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"this is called\");\r\n    const id = uuidv4();\r\n\r\n    firestore.collection('Created Classes')\r\n      .doc(creatorEmail)\r\n      .collection('classes')\r\n      .doc(id).set({\r\n        owner: creatorEmail,\r\n        //photoURL:creatorPhotoURL,\r\n        className: className,\r\n        section: section,\r\n        subject: subject,\r\n        room: Room,\r\n        id: id,\r\n      })\r\n      .then(()=>{\r\n        props.value.handleClose()\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={props.value.open} onClose={props.value.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Create a Class</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter details\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Class Name\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={className}\r\n            onChange={(e) => {\r\n              setClassName(e.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Section\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={section}\r\n            onChange={(e) => {\r\n              setSection(e.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Subject\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={subject}\r\n            onChange={(e) => {\r\n              setSubject(e.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Room\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={Room}\r\n            onChange={(e) => {\r\n              setRoom(e.target.value)\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={addClass}\r\n            color=\"primary\">\r\n            Create\r\n          </Button>\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Header\\Header.js",["63","64","65","66","67","68"],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\JoinClass\\JoinClass.js",["69"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport './JoinClass.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { TextField } from '@material-ui/core';\r\nimport { useContext } from 'react';\r\nimport { authContext } from '../AuthProvider';\r\nimport LetteredAvatar from 'lettered-avatar'\r\nimport { firestore } from '../lib/firebase';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nexport default function FullScreenDialog(props) {\r\n    const classes = useStyles();\r\n    let user = useContext(authContext);\r\n    let [classCode, setClassCode] = useState(\"\");\r\n    let [ownersEmail, setOwnersEmail] = useState(\"\");\r\n    let [error, setError] = useState(\"\");\r\n    let [joinedData, setJoinedData] = useState(\"\");\r\n    let [classExists, setClassExists] = useState(\"\");\r\n    let handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        firestore.collection('Created Classes')\r\n        .doc(ownersEmail)\r\n        .collection('classes')\r\n        .doc(classCode)\r\n        .get().then((doc)=>{\r\n            if(doc.exists && ownersEmail !== user.email){\r\n                setClassExists(true);\r\n                setJoinedData(doc.data());\r\n                setError(false);\r\n            }\r\n            else{\r\n                setClassExists(false);\r\n                setError(true);\r\n                return\r\n            }\r\n        \r\n        })\r\n        if(classExists===true){\r\n            firestore.collection('Joined Classes')\r\n            .doc(user.email)\r\n            .collection('classes')\r\n            .doc(classCode)\r\n            .set({\r\n                joinedData,\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen open={props.valueJoin.openJoin} onClose={props.valueJoin.handleCloseJoin} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={props.valueJoin.handleCloseJoin} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Join Class\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={props.valueJoin.handleCloseJoin}>\r\n                            JOIN\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className=\"joinClass\">\r\n                    <div className=\"joinClass__form\">\r\n                        <p className=\"joinClass__formText\">\r\n                            You're currently signed in as logged in mail\r\n                        </p>\r\n                        <div className=\"joinClass__loginInfo\">\r\n                            <div className=\"joinClass__classLeft\">\r\n                                <LetteredAvatar name={user && !(user.photoURL) ? `${user.displayName}` : \"\"} \r\n                                imgSrc={user ? user.photoURL : \"\"} />\r\n                                <div className=\"joinClass__loginText\">\r\n                                    <div className=\"joinClass__loginName\">\r\n                                        {user ? user.displayName : \"\"}\r\n                                    </div>\r\n                                    <div className=\"joinClass__loginEmail\">\r\n                                        {user ? user.email : \"\"}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Button variant=\"outlined\" color=\"primary\">\r\n                                Logout\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"joinClass__form\">\r\n                        <h5>Class code</h5>\r\n                        <div>ask your teacher/owner for class code</div>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Class Code\"\r\n                            type=\"email\"\r\n                            fullWidth\r\n                            value={classCode}\r\n                            onChange={(e) => {\r\n                                setClassCode(e.currentTarget.value);\r\n                            }}\r\n                            error={error}\r\n                            helperText={error && \"No class exist\"}\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Owner's Email\"\r\n                            type=\"email\"\r\n                            fullWidth\r\n                            value={ownersEmail}\r\n                            onChange={(e) => {\r\n                                setOwnersEmail(e.currentTarget.value);\r\n                            }}\r\n                            error={error}\r\n                            helperText={error && \"No class exist\"}\r\n\r\n                        />\r\n                        <Button onClick={handleSubmit}\r\n                        variant=\"outlined\" color=\"primary\">\r\n                            JOIN\r\n                        </Button>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </Dialog>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Home.js",["70","71","72","73","74"],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\App.js",[],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Login.js",[],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\lib\\firebase.js",[],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\AuthProvider.js",[],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\SignupForm\\Signup.js",["75","76"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { auth } from '../lib/firebase';\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore'\r\nimport { useContext } from 'react'\r\nimport { authContext } from '../AuthProvider';\r\nimport { Redirect } from 'react-router';\r\n\r\nexport const Signup = () => {\r\n    let [displayName, setDisplayName] = useState(\"\");\r\n    let [email, setEmail] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n    let [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    let user = useContext(authContext);\r\n \r\n    return (\r\n\r\n        <div>\r\n            {user ? <Redirect to=\"/\" /> : \"\"}\r\n\r\n            <form\r\n                className=\"col-4 offset-4\">\r\n                <h1>Sign up !</h1>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Full Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                        value={displayName}\r\n                        onChange={(e) => {\r\n                            setDisplayName(e.target.value)\r\n                        }}\r\n                    />\r\n\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                            setEmail(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\"\r\n                        value={password}\r\n                        onChange={(e) => {\r\n                            setPassword(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputPassword2\" class=\"form-label\">Confirm Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword2\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => {\r\n                            setConfirmPassword(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <button onClick={(e) => {\r\n                    e.preventDefault();\r\n                    if (password === confirmPassword) {\r\n                        \r\n                        auth.createUserWithEmailAndPassword(email, password)\r\n                    }\r\n                    else {\r\n                        alert(\"password did not match\");\r\n                    }\r\n                }}\r\n                    type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\classCardUI\\cardUI.js",["77"],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\ClassCardUI\\CardUI.js",["78","79","80","81","82","83"],"import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { authContext } from '../AuthProvider';\r\nimport { EnteredClass } from '../EnteredClass/EnteredClass';\r\nimport { BrowserRouter as Router, Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport './CardUI.css'\r\nexport const CardUI = (props) => {\r\n    let user = useContext(authContext);\r\n    let history = useHistory();\r\n    let imageCollection = [\r\n        \"https://i.ytimg.com/vi/oT_8yN5RVow/maxresdefault.jpg\",\r\n        \"https://i.pinimg.com/originals/0f/70/d6/0f70d6f8985b149d23f7784ee6163d5c.jpg\",\r\n        \"https://64.media.tumblr.com/6e7df3c57dd725407b591a77e4da5ffe/tumblr_pgew3cjnPA1sguk2k_540.gif\",\r\n        \"https://data.whicdn.com/images/260986695/original.gif\",\r\n        \"https://images.crazygames.com/games/death-note-type/thumb-1582906488818.png?auto=format,compress&q=75&cs=strip\",\r\n        \"https://media.baamboozle.com/uploads/images/57307/1595450130_258217\",\r\n        \"https://64.media.tumblr.com/f91e1875337480b18202e8330e11dd90/tumblr_os0hrkuBtU1w3z4mto1_640.jpg\",\r\n        \"https://wallpaperaccess.com/full/859072.jpg\",\r\n        \"https://static.wikia.nocookie.net/mharoleplaying/images/2/24/TSJ_High.png/revision/latest?cb=20190814063314\",\r\n        \"https://piggy-rider.s3.ap-south-1.amazonaws.com/st.-xavier%27s-school-primary-image-SXUgApmDecANPbEZ.jpg\",\r\n        \"https://p4.wallpaperbetter.com/wallpaper/176/733/109/anime-classroom-wallpaper-preview.jpg\",\r\n        \"https://www.teahub.io/photos/full/266-2667305_anime-wallpaper-school-sad.jpg\"\r\n\r\n    ]\r\n    return (\r\n\r\n        <>\r\n            <div class=\"card-deck col-2\">\r\n                <div class=\"card\">\r\n                    <img class=\"card-img-top\" src={imageCollection[props.data.subject.charCodeAt(0) % 11]} alt=\"\" />\r\n                    <Avatar className=\"avatarStyle\" src={props.data.photoURL} />\r\n\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{props.data.subject}</h5>\r\n                        <p class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content.This content is a little bit longer.</p>\r\n                        <h6>ClassCode :</h6>\r\n                        <h6>{props.data.id}</h6>\r\n                        <button\r\n                            onClick={() => {\r\n                                history.push(`/enteredClass/${props.data.id}`)\r\n                                console.log(props.data.id);\r\n                            }}\r\n                            type=\"button\" className=\"btn btn-success\">Enter Class</button>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"card-footer\">\r\n                        <small class=\"text-muted\">\r\n                            <div>Professor : {props.data.owner}</div>\r\n                            <div>Status : {props.status}</div>\r\n                            <div>Class : {props.data.className + \" \" + props.data.section}</div>\r\n\r\n                        </small>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\EnteredClass\\EnteredClass.js",["84"],"import React from 'react'\r\nimport { useContext } from 'react';\r\nimport { authContext } from '../AuthProvider';\r\n\r\nexport const EnteredClass = (props) => {\r\n\r\n\r\n    let user = useContext(authContext);\r\n    //console.log(user);\r\n    console.log(props);\r\n    return (\r\n        <div>\r\n            You just entered the class, WELCOME\r\n            <h1>{props.cardDetails.owner}</h1>\r\n            <h1>{props.cardDetails.subject}</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":25,"column":7,"nodeType":"91","messageId":"92","endLine":25,"endColumn":22},{"ruleId":"89","severity":1,"message":"93","line":29,"column":10,"nodeType":"91","messageId":"92","endLine":29,"endColumn":18},{"ruleId":"89","severity":1,"message":"94","line":40,"column":9,"nodeType":"91","messageId":"92","endLine":40,"endColumn":21},{"ruleId":"89","severity":1,"message":"95","line":44,"column":9,"nodeType":"91","messageId":"92","endLine":44,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":88,"column":25,"nodeType":"98","endLine":88,"endColumn":54},{"ruleId":"96","severity":1,"message":"97","line":93,"column":25,"nodeType":"98","endLine":93,"endColumn":54},{"ruleId":"96","severity":1,"message":"97","line":94,"column":25,"nodeType":"98","endLine":94,"endColumn":54},{"ruleId":"89","severity":1,"message":"99","line":12,"column":8,"nodeType":"91","messageId":"92","endLine":12,"endColumn":14},{"ruleId":"89","severity":1,"message":"100","line":11,"column":10,"nodeType":"91","messageId":"92","endLine":11,"endColumn":18},{"ruleId":"89","severity":1,"message":"101","line":12,"column":27,"nodeType":"91","messageId":"92","endLine":12,"endColumn":33},{"ruleId":"89","severity":1,"message":"102","line":12,"column":35,"nodeType":"91","messageId":"92","endLine":12,"endColumn":41},{"ruleId":"89","severity":1,"message":"103","line":12,"column":43,"nodeType":"91","messageId":"92","endLine":12,"endColumn":48},{"ruleId":"89","severity":1,"message":"104","line":13,"column":10,"nodeType":"91","messageId":"92","endLine":13,"endColumn":22},{"ruleId":"89","severity":1,"message":"105","line":2,"column":20,"nodeType":"91","messageId":"92","endLine":2,"endColumn":29},{"ruleId":"89","severity":1,"message":"106","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":8,"column":17,"nodeType":"98","endLine":8,"endColumn":75},{"ruleId":"89","severity":1,"message":"104","line":6,"column":10,"nodeType":"91","messageId":"92","endLine":6,"endColumn":22},{"ruleId":"89","severity":1,"message":"101","line":7,"column":27,"nodeType":"91","messageId":"92","endLine":7,"endColumn":33},{"ruleId":"89","severity":1,"message":"102","line":7,"column":35,"nodeType":"91","messageId":"92","endLine":7,"endColumn":41},{"ruleId":"89","severity":1,"message":"103","line":7,"column":43,"nodeType":"91","messageId":"92","endLine":7,"endColumn":48},{"ruleId":"89","severity":1,"message":"109","line":7,"column":50,"nodeType":"91","messageId":"92","endLine":7,"endColumn":63},{"ruleId":"89","severity":1,"message":"110","line":10,"column":9,"nodeType":"91","messageId":"92","endLine":10,"endColumn":13},{"ruleId":"89","severity":1,"message":"110","line":8,"column":9,"nodeType":"91","messageId":"92","endLine":8,"endColumn":13},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'creatorPhotoURL' is assigned a value but never used.","Identifier","unusedVar","'anchorE2' is assigned a value but never used.","'handleClick2' is assigned a value but never used.","'handleClose2' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Avatar' is defined but never used.","'ListItem' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'EnteredClass' is defined but never used.","'useEffect' is defined but never used.","'firebase' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'BrowserRouter' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]