[{"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\index.js":"1","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\CreateClass\\CreateClass.js":"2","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Header\\Header.js":"3","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\JoinClass\\JoinClass.js":"4","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Home.js":"5","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\App.js":"6","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Login.js":"7","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\lib\\firebase.js":"8","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\AuthProvider.js":"9","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\SignupForm\\Signup.js":"10","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\classCardUI\\cardUI.js":"11","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\ClassCardUI\\CardUI.js":"12"},{"size":178,"mtime":1630412919080,"results":"13","hashOfConfig":"14"},{"size":3323,"mtime":1631535300119,"results":"15","hashOfConfig":"14"},{"size":3875,"mtime":1631557824177,"results":"16","hashOfConfig":"14"},{"size":6242,"mtime":1631534935006,"results":"17","hashOfConfig":"14"},{"size":2552,"mtime":1631528701940,"results":"18","hashOfConfig":"14"},{"size":875,"mtime":1631078609265,"results":"19","hashOfConfig":"14"},{"size":2206,"mtime":1631172483497,"results":"20","hashOfConfig":"14"},{"size":676,"mtime":1630986104253,"results":"21","hashOfConfig":"14"},{"size":869,"mtime":1631171931698,"results":"22","hashOfConfig":"14"},{"size":3111,"mtime":1631177883141,"results":"23","hashOfConfig":"14"},{"size":833,"mtime":1631446724149,"results":"24","hashOfConfig":"14"},{"size":2475,"mtime":1631557621051,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ab2eru",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\index.js",[],["57","58"],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\CreateClass\\CreateClass.js",["59"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useContext } from 'react';\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { authContext } from '../AuthProvider';\r\nimport { firestore } from '../lib/firebase';\r\n\r\n\r\nexport default function FormDialog(props) {\r\n\r\n  const [className, setClassName] = useState(\"\")\r\n  const [section, setSection] = useState(\"\")\r\n  const [subject, setSubject] = useState(\"\")\r\n  const [Room, setRoom] = useState(\"\")\r\n\r\n  let user = useContext(authContext);\r\n  let creatorEmail = user?user.email:\"\";\r\n  let creatorPhotoURL = user?user.photoURL:\"\";\r\n\r\n\r\n\r\n\r\n\r\n  const addClass = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"this is called\");\r\n    const id = uuidv4();\r\n\r\n    firestore.collection('Created Classes')\r\n      .doc(creatorEmail)\r\n      .collection('classes')\r\n      .doc(id).set({\r\n        owner: creatorEmail,\r\n        //photoURL:creatorPhotoURL,\r\n        className: className,\r\n        section: section,\r\n        subject: subject,\r\n        room: Room,\r\n        id: id,\r\n      })\r\n      .then(()=>{\r\n        props.value.handleClose()\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={props.value.open} onClose={props.value.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Create a Class</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter details\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Class Name\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={className}\r\n            onChange={(e) => {\r\n              setClassName(e.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Section\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={section}\r\n            onChange={(e) => {\r\n              setSection(e.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Subject\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={subject}\r\n            onChange={(e) => {\r\n              setSubject(e.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Room\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={Room}\r\n            onChange={(e) => {\r\n              setRoom(e.target.value)\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={addClass}\r\n            color=\"primary\">\r\n            Create\r\n          </Button>\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Header\\Header.js",["60","61","62","63","64","65"],"import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { auth } from '../lib/firebase';\r\nimport LetteredAvatar from 'lettered-avatar'\r\nimport \"./Header.css\"\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { authContext } from '../AuthProvider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorE2, setAnchorE2] = React.useState(null);\r\n\r\n\r\n  const handleClick1 = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose1 = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClick2 = (event) => {\r\n    setAnchorE2(event.currentTarget);\r\n  };\r\n\r\n  const handleClose2 = () => {\r\n    setAnchorE2(null);\r\n  };\r\n\r\n\r\n  let user = useContext(authContext);\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\" alt=\"\" />\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Classroom\r\n          </Typography>\r\n          <div className=\"Header-add-apps-acc\">\r\n            <AddIcon onClick={handleClick1} />\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose1}\r\n            >\r\n              <MenuItem onClick={props.combinedValue.valueJoin.handleClickOpenJoin}>Join Class</MenuItem>\r\n              <MenuItem onClick={props.combinedValue.value.handleClickOpen}>Create Class</MenuItem>\r\n\r\n            </Menu>\r\n\r\n            <AppsIcon />\r\n            <div>\r\n              <div className=\"dropdown\">\r\n                <div className=\"container\">\r\n                  <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <LetteredAvatar\r\n                      name={user && !(user.photoURL) ? `${user.displayName}` : \"\"}\r\n                      imgSrc={user ? user.photoURL : \"\"} />\r\n                  </button>\r\n                  <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\" >\r\n\r\n                    <li><a className=\"dropdown-item\">\r\n                    <LetteredAvatar\r\n                      name={user && !(user.photoURL) ? `${user.displayName}` : \"\"}\r\n                      imgSrc={user ? user.photoURL : \"\"} />\r\n                      </a></li>\r\n                    <li><a className=\"dropdown-item\"><h5>{user?user.email:\"\"}</h5></a></li>\r\n                    <li><a className=\"dropdown-item\">\r\n                    <button\r\n                      onClick={() => {\r\n                        auth.signOut();\r\n                      }}\r\n                      type=\"button\" className=\"btn btn-danger\">LOGOUT</button>\r\n                      </a></li>\r\n\r\n            \r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\JoinClass\\JoinClass.js",["66"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport './JoinClass.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { TextField } from '@material-ui/core';\r\nimport { useContext } from 'react';\r\nimport { authContext } from '../AuthProvider';\r\nimport LetteredAvatar from 'lettered-avatar'\r\nimport { firestore } from '../lib/firebase';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nexport default function FullScreenDialog(props) {\r\n    const classes = useStyles();\r\n    let user = useContext(authContext);\r\n    let [classCode, setClassCode] = useState(\"\");\r\n    let [ownersEmail, setOwnersEmail] = useState(\"\");\r\n    let [error, setError] = useState(\"\");\r\n    let [joinedData, setJoinedData] = useState(\"\");\r\n    let [classExists, setClassExists] = useState(\"\");\r\n    let handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        firestore.collection('Created Classes')\r\n        .doc(ownersEmail)\r\n        .collection('classes')\r\n        .doc(classCode)\r\n        .get().then((doc)=>{\r\n            if(doc.exists && ownersEmail !== user.email){\r\n                setClassExists(true);\r\n                setJoinedData(doc.data());\r\n                setError(false);\r\n            }\r\n            else{\r\n                setClassExists(false);\r\n                setError(true);\r\n                return\r\n            }\r\n        \r\n        })\r\n        if(classExists===true){\r\n            firestore.collection('Joined Classes')\r\n            .doc(user.email)\r\n            .collection('classes')\r\n            .doc(classCode)\r\n            .set({\r\n                joinedData,\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen open={props.valueJoin.openJoin} onClose={props.valueJoin.handleCloseJoin} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={props.valueJoin.handleCloseJoin} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Join Class\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={props.valueJoin.handleCloseJoin}>\r\n                            JOIN\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className=\"joinClass\">\r\n                    <div className=\"joinClass__form\">\r\n                        <p className=\"joinClass__formText\">\r\n                            You're currently signed in as logged in mail\r\n                        </p>\r\n                        <div className=\"joinClass__loginInfo\">\r\n                            <div className=\"joinClass__classLeft\">\r\n                                <LetteredAvatar name={user && !(user.photoURL) ? `${user.displayName}` : \"\"} \r\n                                imgSrc={user ? user.photoURL : \"\"} />\r\n                                <div className=\"joinClass__loginText\">\r\n                                    <div className=\"joinClass__loginName\">\r\n                                        {user ? user.displayName : \"\"}\r\n                                    </div>\r\n                                    <div className=\"joinClass__loginEmail\">\r\n                                        {user ? user.email : \"\"}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Button variant=\"outlined\" color=\"primary\">\r\n                                Logout\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"joinClass__form\">\r\n                        <h5>Class code</h5>\r\n                        <div>ask your teacher/owner for class code</div>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Class Code\"\r\n                            type=\"email\"\r\n                            fullWidth\r\n                            value={classCode}\r\n                            onChange={(e) => {\r\n                                setClassCode(e.currentTarget.value);\r\n                            }}\r\n                            error={error}\r\n                            helperText={error && \"No class exist\"}\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Owner's Email\"\r\n                            type=\"email\"\r\n                            fullWidth\r\n                            value={ownersEmail}\r\n                            onChange={(e) => {\r\n                                setOwnersEmail(e.currentTarget.value);\r\n                            }}\r\n                            error={error}\r\n                            helperText={error && \"No class exist\"}\r\n\r\n                        />\r\n                        <Button onClick={handleSubmit}\r\n                        variant=\"outlined\" color=\"primary\">\r\n                            JOIN\r\n                        </Button>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </Dialog>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Home.js",["67"],"import Header from \"./Header/Header\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport CreateClass from \"./CreateClass/CreateClass\"\r\nimport JoinClass from \"./JoinClass/JoinClass\"\r\nimport { useContext } from 'react';\r\nimport { authContext } from './AuthProvider';\r\nimport { Redirect } from \"react-router\";\r\nimport { firestore } from \"./lib/firebase\";\r\nimport { CardUI } from \"./ClassCardUI/CardUI\"\r\nimport './Home.css';\r\nimport { ListItem } from \"@material-ui/core\";\r\nexport const Home = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [openJoin, setOpenJoin] = React.useState(false);\r\n  const handleClickOpenJoin = () => {\r\n    setOpenJoin(true);\r\n  };\r\n  const handleCloseJoin = () => {\r\n    setOpenJoin(false);\r\n  };\r\n  let user = useContext(authContext);\r\n  //console.log(user);\r\n  let value = { open, setOpen, handleClickOpen, handleClose }\r\n  let valueJoin = { openJoin, setOpenJoin, handleClickOpenJoin, handleCloseJoin }\r\n  let combinedValue = { value, valueJoin }\r\n\r\n\r\n  const [createdClasses, setCreatedClasses] = useState([]);\r\n  const [joinedClasses, setJoinedClasses] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    if(user){\r\n      let unsub = firestore.collection('Created Classes')\r\n      .doc(user.email)\r\n      .collection('classes')\r\n      .onSnapshot((snapshot)=>{\r\n        setCreatedClasses(snapshot.docs.map((doc)=>doc.data()))\r\n      })\r\n      return()=>{\r\n        unsub();\r\n      }\r\n    }\r\n  },[user])\r\n\r\n  useEffect(()=>{\r\n    if(user){\r\n      let unsub = firestore.collection('Joined Classes')\r\n      .doc(user.email)\r\n      .collection('classes')\r\n      .onSnapshot((snapshot)=>{\r\n        setJoinedClasses(snapshot.docs.map((doc)=>doc.data().joinedData))\r\n      })\r\n      return()=>{\r\n        unsub();\r\n      }\r\n    }\r\n  },[user])\r\n \r\n\r\n  //console.log(createdClasses);\r\n  joinedClasses.forEach(element=>{\r\n    console.log(element);\r\n  })\r\n  return (\r\n    <div>\r\n      {user ? \"\" : <Redirect to=\"/login\" />}\r\n\r\n      <Header combinedValue={combinedValue} />\r\n      <CreateClass value={value} />\r\n      <JoinClass valueJoin={valueJoin} />\r\n      <div className=\"dashboard\">\r\n        {joinedClasses.map((item)=>{\r\n          return <CardUI data={item} status=\"Joined Class\"/>;\r\n        }\r\n        )}\r\n        {createdClasses.map((item)=>{\r\n          return <CardUI data={item} status=\"Created Classes\"/>;\r\n        }\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\App.js",[],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\Login.js",[],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\lib\\firebase.js",[],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\AuthProvider.js",[],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\SignupForm\\Signup.js",["68","69"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { auth } from '../lib/firebase';\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore'\r\nimport { useContext } from 'react'\r\nimport { authContext } from '../AuthProvider';\r\nimport { Redirect } from 'react-router';\r\n\r\nexport const Signup = () => {\r\n    let [displayName, setDisplayName] = useState(\"\");\r\n    let [email, setEmail] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n    let [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    let user = useContext(authContext);\r\n \r\n    return (\r\n\r\n        <div>\r\n            {user ? <Redirect to=\"/\" /> : \"\"}\r\n\r\n            <form\r\n                className=\"col-4 offset-4\">\r\n                <h1>Sign up !</h1>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Full Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                        value={displayName}\r\n                        onChange={(e) => {\r\n                            setDisplayName(e.target.value)\r\n                        }}\r\n                    />\r\n\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                            setEmail(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\"\r\n                        value={password}\r\n                        onChange={(e) => {\r\n                            setPassword(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputPassword2\" class=\"form-label\">Confirm Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword2\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => {\r\n                            setConfirmPassword(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <button onClick={(e) => {\r\n                    e.preventDefault();\r\n                    if (password === confirmPassword) {\r\n                        \r\n                        auth.createUserWithEmailAndPassword(email, password)\r\n                    }\r\n                    else {\r\n                        alert(\"password did not match\");\r\n                    }\r\n                }}\r\n                    type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\classCardUI\\cardUI.js",["70"],"C:\\batches\\Aug pp10\\react\\Google Classroom Project\\app\\src\\ClassCardUI\\CardUI.js",["71"],"import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useContext } from 'react';\r\nimport { authContext } from '../AuthProvider';\r\nimport './CardUI.css'\r\nexport const CardUI = (props) => {\r\n    let user = useContext(authContext);\r\n    console.log(props);\r\n    let imageCollection=[\r\n        \"https://i.ytimg.com/vi/oT_8yN5RVow/maxresdefault.jpg\",\r\n        \"https://i.pinimg.com/originals/0f/70/d6/0f70d6f8985b149d23f7784ee6163d5c.jpg\",\r\n        \"https://64.media.tumblr.com/6e7df3c57dd725407b591a77e4da5ffe/tumblr_pgew3cjnPA1sguk2k_540.gif\",\r\n        \"https://data.whicdn.com/images/260986695/original.gif\",\r\n        \"https://images.crazygames.com/games/death-note-type/thumb-1582906488818.png?auto=format,compress&q=75&cs=strip\",\r\n        \"https://media.baamboozle.com/uploads/images/57307/1595450130_258217\",\r\n        \"https://images-na.ssl-images-amazon.com/images/S/pv-target-images/1d101530e7435bc49e296775a8ea9c4c109f31a4fc3853f1c40d9786943cf26a._RI_V_TTW_.jpg\",\r\n        \"https://wallpaperaccess.com/full/859072.jpg\",\r\n        \"https://static.wikia.nocookie.net/mharoleplaying/images/2/24/TSJ_High.png/revision/latest?cb=20190814063314\",\r\n        \"https://piggy-rider.s3.ap-south-1.amazonaws.com/st.-xavier%27s-school-primary-image-SXUgApmDecANPbEZ.jpg\",\r\n        \"https://p4.wallpaperbetter.com/wallpaper/176/733/109/anime-classroom-wallpaper-preview.jpg\",\r\n        \"https://www.teahub.io/photos/full/266-2667305_anime-wallpaper-school-sad.jpg\"\r\n\r\n    ]\r\n    return (\r\n        <div class=\"card-deck col-2\">\r\n        <div class=\"card\">\r\n            <img class=\"card-img-top\" src={imageCollection[props.data.subject.charCodeAt(0)%11]} alt=\"\"/>\r\n            <Avatar className = \"avatarStyle\" src={props.data.photoURL}/>\r\n            <div class =\"card-body\">\r\n\r\n            <h5 class =\"card-title\">{props.data.subject}</h5>\r\n            <p class =\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content.This content is a little bit longer.</p>\r\n            <h6>ClassCode :</h6> \r\n            <h6>{props.data.id}</h6>\r\n            </div>\r\n\r\n            <div class =\"card-footer\">\r\n            <small class =\"text-muted\">\r\n            <div>Professor : {props.data.owner}</div>\r\n            <div>Status : {props.status}</div>\r\n            <div>Class : {props.data.className + \" \" + props.data.section}</div>\r\n \r\n            </small>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":25,"column":7,"nodeType":"78","messageId":"79","endLine":25,"endColumn":22},{"ruleId":"76","severity":1,"message":"80","line":29,"column":10,"nodeType":"78","messageId":"79","endLine":29,"endColumn":18},{"ruleId":"76","severity":1,"message":"81","line":40,"column":9,"nodeType":"78","messageId":"79","endLine":40,"endColumn":21},{"ruleId":"76","severity":1,"message":"82","line":44,"column":9,"nodeType":"78","messageId":"79","endLine":44,"endColumn":21},{"ruleId":"83","severity":1,"message":"84","line":89,"column":25,"nodeType":"85","endLine":89,"endColumn":54},{"ruleId":"83","severity":1,"message":"84","line":94,"column":25,"nodeType":"85","endLine":94,"endColumn":54},{"ruleId":"83","severity":1,"message":"84","line":95,"column":25,"nodeType":"85","endLine":95,"endColumn":54},{"ruleId":"76","severity":1,"message":"86","line":12,"column":8,"nodeType":"78","messageId":"79","endLine":12,"endColumn":14},{"ruleId":"76","severity":1,"message":"87","line":11,"column":10,"nodeType":"78","messageId":"79","endLine":11,"endColumn":18},{"ruleId":"76","severity":1,"message":"88","line":2,"column":20,"nodeType":"78","messageId":"79","endLine":2,"endColumn":29},{"ruleId":"76","severity":1,"message":"89","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":8,"column":17,"nodeType":"85","endLine":8,"endColumn":75},{"ruleId":"76","severity":1,"message":"92","line":7,"column":9,"nodeType":"78","messageId":"79","endLine":7,"endColumn":13},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'creatorPhotoURL' is assigned a value but never used.","Identifier","unusedVar","'anchorE2' is assigned a value but never used.","'handleClick2' is assigned a value but never used.","'handleClose2' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Avatar' is defined but never used.","'ListItem' is defined but never used.","'useEffect' is defined but never used.","'firebase' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]