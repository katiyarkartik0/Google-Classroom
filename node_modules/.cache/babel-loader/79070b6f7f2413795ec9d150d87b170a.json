{"ast":null,"code":"var _jsxFileName = \"C:\\\\batches\\\\Aug pp10\\\\react\\\\Google Classroom Project\\\\app\\\\src\\\\Posts\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { firestore } from '../lib/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Posts = props => {\n  _s();\n\n  const [posts, setposts] = useState([]);\n  console.log(props);\n  useEffect(() => {\n    if (props.postInfo) {\n      let unsubscribe = firestore.collection('announcements').doc('classes').collection(props.postInfo.id).onSnapshot(snap => {\n        setposts(snap.docs.map(doc => doc.data()));\n      });\n    }\n  }, [props.postInfo]);\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(item => {\n      {\n        if (item.documentURL) {\n          /*#__PURE__*/\n          _jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n                src: item.imageURL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }, this)\n          }, void 0, false);\n        } else {}\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"Z3G9j25+a76OS4L8+Rs4tlxkEFU=\");\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/batches/Aug pp10/react/Google Classroom Project/app/src/Posts/Posts.js"],"names":["React","useState","useEffect","firestore","Posts","props","posts","setposts","console","log","postInfo","unsubscribe","collection","doc","id","onSnapshot","snap","docs","map","data","item","documentURL","imageURL","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AACA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,KAAK,CAACK,QAAV,EAAoB;AAChB,UAAIC,WAAW,GAAGR,SAAS,CAACS,UAAV,CAAqB,eAArB,EACbC,GADa,CACT,SADS,EAEbD,UAFa,CAEFP,KAAK,CAACK,QAAN,CAAeI,EAFb,EAGbC,UAHa,CAGDC,IAAD,IAAU;AAClBT,QAAAA,QAAQ,CAACS,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAeL,GAAD,IAASA,GAAG,CAACM,IAAJ,EAAvB,CAAD,CAAR;AACH,OALa,CAAlB;AAMH;AACJ,GATQ,EASN,CAACd,KAAK,CAACK,QAAP,CATM,CAAT;AAUAF,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,sBACI;AAAA,cACKA,KAAK,CAACY,GAAN,CAAWE,IAAD,IAAS;AAEhB;AAAC,YAAGA,IAAI,CAACC,WAAR,EAAoB;AACjB;AAAA;AAAA,mCACA;AAAK,cAAA,KAAK,EAAC,UAAX;AAAA,sCACI;AAAQ,gBAAA,GAAG,EAAED,IAAI,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAMF,IAAI,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMH,SAPA,MAOI,CAEJ;AAAC;AAGL,KAdA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAjCM;;GAAMnB,K;;KAAAA,K","sourcesContent":["import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { firestore } from '../lib/firebase';\r\nexport const Posts = (props) => {\r\n    const [posts, setposts] = useState([])\r\n    console.log(props);\r\n    useEffect(() => {\r\n        if (props.postInfo) {\r\n            let unsubscribe = firestore.collection('announcements')\r\n                .doc('classes')\r\n                .collection(props.postInfo.id)\r\n                .onSnapshot((snap) => {\r\n                    setposts(snap.docs.map((doc) => doc.data()))\r\n                })\r\n        }\r\n    }, [props.postInfo])\r\n    console.log(posts);\r\n    return (\r\n        <div>\r\n            {posts.map((item) =>{ \r\n                \r\n                {if(item.documentURL){\r\n                    <>\r\n                    <div class=\"card-box\">\r\n                        <iframe src={item.imageURL}></iframe>\r\n                        <div>{item.text}</div>\r\n                    </div>\r\n                </>\r\n                }else{\r\n                    \r\n                }}\r\n               \r\n                \r\n            })}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}