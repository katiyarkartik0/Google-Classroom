{"ast":null,"code":"import _slicedToArray from\"C:/batches/Aug pp10/react/Google Classroom Project/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useState,useEffect}from'react';import{auth}from'../lib/firebase';import firebase from'firebase';import'firebase/firestore';import{useContext}from'react';import{authContext}from'../AuthProvider';import{Redirect}from'react-router';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Signup=function Signup(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),displayName=_useState2[0],setDisplayName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var user=useContext(authContext);var signingUp=function signingUp(){auth.createUserWithEmailAndPassword(email,password).then(function(user){auth.onAuthStateChanged(function(user){if(user){user.updateProfile({displayName:displayName});}});});};return/*#__PURE__*/_jsxs(\"div\",{children:[user?/*#__PURE__*/_jsx(Redirect,{to:\"/\"}):\"\",/*#__PURE__*/_jsxs(\"form\",{className:\"col-4 offset-4\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sign up !\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"exampleInputEmail1\",class:\"form-label\",children:\"Full Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",class:\"form-control\",id:\"exampleInputEmail1\",\"aria-describedby\":\"emailHelp\",value:displayName,onChange:function onChange(e){setDisplayName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"exampleInputEmail1\",class:\"form-label\",children:\"Email address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",class:\"form-control\",id:\"exampleInputEmail1\",\"aria-describedby\":\"emailHelp\",value:email,onChange:function onChange(e){setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"exampleInputPassword1\",class:\"form-label\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",class:\"form-control\",id:\"exampleInputPassword1\",value:password,onChange:function onChange(e){setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"exampleInputPassword2\",class:\"form-label\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",class:\"form-control\",id:\"exampleInputPassword2\",value:confirmPassword,onChange:function onChange(e){setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){e.preventDefault();if(password===confirmPassword){signingUp();}else{alert(\"password did not match\");}},type:\"submit\",class:\"btn btn-primary\",children:\"Submit\"})]})]});};","map":{"version":3,"sources":["C:/batches/Aug pp10/react/Google Classroom Project/app/src/SignupForm/Signup.js"],"names":["React","useState","useEffect","auth","firebase","useContext","authContext","Redirect","Signup","displayName","setDisplayName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","user","signingUp","createUserWithEmailAndPassword","then","onAuthStateChanged","updateProfile","e","target","value","preventDefault","alert"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { auth } from '../lib/firebase';\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore'\r\nimport { useContext } from 'react'\r\nimport { authContext } from '../AuthProvider';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nexport const Signup = () => {\r\n    let [displayName, setDisplayName] = useState(\"\");\r\n    let [email, setEmail] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n    let [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    let user = useContext(authContext);\r\n\r\n    let signingUp = ()=>{\r\n        auth.createUserWithEmailAndPassword(email, password).then((user) =>{\r\n            auth.onAuthStateChanged (user => {\r\n              if (user) {\r\n                user.updateProfile({ \r\n                  displayName: displayName\r\n                })}})})\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {user ? <Redirect to=\"/\" /> : \"\"}\r\n\r\n            <form\r\n                className=\"col-4 offset-4\">\r\n                <h1>Sign up !</h1>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Full Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                        value={displayName}\r\n                        onChange={(e) => {\r\n                            setDisplayName(e.target.value)\r\n                        }}\r\n                    />\r\n\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                            setEmail(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\"\r\n                        value={password}\r\n                        onChange={(e) => {\r\n                            setPassword(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputPassword2\" class=\"form-label\">Confirm Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword2\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => {\r\n                            setConfirmPassword(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <button onClick={(e) => {\r\n                    \r\n                    e.preventDefault();\r\n                    if (password === confirmPassword) {\r\n                     signingUp()\r\n                    }\r\n                    else {\r\n                        alert(\"password did not match\");\r\n                    }\r\n                }}\r\n                    type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}